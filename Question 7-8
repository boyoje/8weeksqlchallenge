--Question 7
#select and join all the table to shows cust_id, product_name, order_date, join_date, and ranked
WITH
  cte1 AS(
  SELECT
    a.customer_id,
    b.product_name,
    a.order_date,
    c.join_date,
    #use desc to order from the earliest purchase first
    DENSE_RANK() OVER(PARTITION BY a.customer_id ORDER BY a.order_date DESC) AS ranked 
  FROM
    dannys_dinner.sales AS a
  LEFT JOIN
    dannys_dinner.menu AS b
  ON
    a.product_id = b.product_id
  LEFT JOIN
    dannys_dinner.members AS c
  ON
    a.customer_id = c.customer_id
  WHERE
    a.order_date < c.join_date)

SELECT
  customer_id,
  STRING_AGG(product_name) as prouduct_purchased,
  order_date,
  join_date
FROM
  cte1
WHERE
  #use ranked = 1 to get the earliest purchase
  ranked = 1 
GROUP BY
  1,3,4

--Question 8
--select cust_id, count of product_id, and sum of purchase, order_date, and join_date
SELECT
  a.customer_id,
  COUNT(a.product_id) AS number_of_purchase,
  SUM(b.price) AS total_spent
FROM
  dannys_dinner.sales AS a
LEFT JOIN
  dannys_dinner.menu AS b
ON
  a.product_id = b.product_id
LEFT JOIN
  dannys_dinner.members AS c
ON
  a.customer_id = c.customer_id
WHERE
  a.order_date < c.join_date #to get the order before they become a member
GROUP BY
  1
