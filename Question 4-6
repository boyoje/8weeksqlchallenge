--Question 4
SELECT
  a.product_id,
  b.product_name,
  COUNT(a.product_id) AS total_purchased
FROM
  dannys_dinner.sales AS a
LEFT JOIN
  dannys_dinner.menu AS b
ON
  a.product_id = b.product_id
GROUP BY
  1,2
ORDER BY
  total_purchased DESC
LIMIT
  1

--Qusetion 5
WITH
  cte1 AS(
  SELECT
    customer_id,
    product_id,
    COUNT(product_id) AS total_purchased,
    DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY COUNT(product_id) DESC) AS ranked
  FROM
    `gharin-personal-project.dannys_dinner.sales`
  GROUP BY
    1,2
  ORDER BY
    1)
SELECT
  a.customer_id,
  STRING_AGG(b.product_name) as favorite_menu,
  a.total_purchased
FROM
  cte1 AS a
LEFT JOIN
  dannys_dinner.menu AS b
ON
  a.product_id = b.product_id
WHERE
  ranked = 1
GROUP BY
  1,3
ORDER BY customer_id

--Question 6
WITH
  cte1 AS (
  SELECT
    a.customer_id,
    b.product_name,
    a.order_date,
    c.join_date,
    #use dense rank to see their first purchase after "join date"
    DENSE_RANK() OVER (PARTITION BY a.customer_id ORDER BY a.order_date ASC) AS ranked 
  FROM
    dannys_dinner.sales AS a
  LEFT JOIN
    #join with menu table to get the product name
    dannys_dinner.menu AS b
  ON
    a.product_id = b.product_id
  LEFT JOIN
    #join with members table to filter only the order_date after join_date
    dannys_dinner.members AS c 
  ON
    a.customer_id = c.customer_id
  WHERE
    a.order_date >= c.join_date)
#select the customer_id, and all the corresponding product with "string aggregate"
SELECT
  customer_id,
  STRING_AGG(product_name) AS product_purchased, order_date, join_date
FROM
  cte1
WHERE
  ranked = 1
GROUP BY 1, 3, 4
